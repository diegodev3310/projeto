services:
  chatbot:
    image: chatbot_whatsapp:latest
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    networks:
      - chatbot_network
    volumes:
      - ./.wwebjs_auth:/app/.wwebjs_auth
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${DIR_IP}:${NODE_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    networks:
      - chatbot_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${PG_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  chatbot_network:
    name: chatbot_network
    driver: bridge

volumes:
  postgres_data: